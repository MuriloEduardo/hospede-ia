services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5

  ia:
    build:
      context: ../services/ia
    container_name: ia
    ports:
      - "4000:4000"
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PORT=4000
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - LANGCHAIN_TRACING_V2=true
      - LANGCHAIN_PROJECT=hospede-ia
      - LANGCHAIN_CALLBACKS_BACKGROUND=true
      - LANGSMITH_API_KEY=${LANGSMITH_API_KEY}

  messenger-whatsapp:
    build:
      context: ../services/messenger-whatsapp
    container_name: messenger-whatsapp
    ports:
      - "3000:3000"
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PORT=3000
      - GRAPH_NUMBER_ID=${GRAPH_NUMBER_ID}
      - GRAPH_API_TOKEN=${GRAPH_API_TOKEN}
      - WEBHOOK_VERIFY_TOKEN=${WEBHOOK_VERIFY_TOKEN}
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672

  postgres:
    image: ankane/pgvector
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    user: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data

networks:
  default:
    driver: bridge

volumes:
  postgres_data:
